<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="greetingAdvice" class="advice.GreetingBeforeAdvice"/>
    <bean id="target" class="advice.NativeWaiter"/>
    <bean id="greetingAfterAdvice" class="advice.GreetingAfterAdvice"/>
    <bean id="waiter" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:proxyInterfaces="advice.Waiter"
          p:interceptorNames="greetingAdvice,greetingAfterAdvice"
          p:target-ref="target"/>

   <bean id="pmonitor" class="introduce.ControllablePerformanceMonitor" />
	<bean id="forumServiceTarget" class="proxy.ForumServiceImpl" />
	<bean id="forumService" class="org.springframework.aop.framework.ProxyFactoryBean"
		p:interfaces="introduce.Monitorable"
		p:target-ref="forumServiceTarget"
		p:interceptorNames="pmonitor"
		p:proxyTargetClass="true" />

	<!--静态切面的配置代码-->
	<!--<bean id="waiterTarget" class="advisor.Waiter"/>-->
	<!--<bean id="sellerTarget" class="advisor.Seller"/>-->
	<!--<bean id="greetingAdvice1" class="advisor.GreetingBeforeAdvice"/>-->
	<!--<bean id="greetingAdvisor" class="advisor.Greetingadvisor"-->
		  <!--p:advice-ref="greetingAdvice1"/>-->

	<!--<bean id="parent" abstract="true"-->
		  <!--class="org.springframework.aop.framework.ProxyFactoryBean"-->
		  <!--p:interceptorNames="greetingAdvisor"-->
		  <!--p:proxyTargetClass="true"/>-->
	<!--<bean id="waiterAdvisor" parent="parent" p:target-ref="waiterTarget"/>-->
	<!--<bean id="seller" parent="parent" p:target-ref="sellerTarget"/>-->

	<!--动态切面的配置代码-->
    <bean id="waiterTarget" class="advisor.Waiter"/>
	<bean id="dynamicAdvisor"
		  class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="pointcut">
			<bean class="advisor.GreetingDynamicPointcut"/>
		</property>
		<property name="advice">
			<bean class="advisor.GreetingBeforeAdvice"/>
		</property>
	</bean>
	<bean id="waiter2" class="org.springframework.aop.framework.ProxyFactoryBean"
		  p:interceptorNames="dynamicAdvisor"
		  p:target-ref="waiterTarget"
		  p:proxyTargetClass="true"/>


	<bean id="greetingFlowAdvice" class="advisor.GreetingBeforeAdvice"/>
	<bean id="waiterFlowTarget" class="advisor.Waiter"/>
	<!--ControlFlowPointcut类有两个构造函数，参数是调用类或调用类加方法-->
	<!--<bean id="controlFlowPointcut"-->
		  <!--class="org.springframework.aop.support.ControlFlowPointcut">-->
		<!--<constructor-arg type="java.lang.Class"-->
						 <!--value="advisor.WaiterDelegate"/>-->
		<!--<constructor-arg type="java.lang.String"-->
						 <!--value="service"/>-->
	<!--</bean>-->

	<!--<bean id="controlFlowAdvisor"-->
		  <!--class="org.springframework.aop.support.DefaultPointcutAdvisor"-->
		  <!--p:pointcut-ref="controlFlowPointcut"-->
		  <!--p:advice-ref="greetingFlowAdvice"/>-->
	<!--<bean id="waiterFlow"-->
		  <!--class="org.springframework.aop.framework.ProxyFactoryBean"-->
		  <!--p:interceptorNames="controlFlowAdvisor"-->
		  <!--p:target-ref="waiterFlowTarget"-->
		  <!--p:proxyTargetClass="true"/>-->

	<!--复合切面配置-->
	<bean id="gcp" class="advisor.GreetingComposablePointcut"/>
    <bean id="composableAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"
		  p:pointcut="#{gcp.intersectionPointcut}"
		  p:advice-ref="greetingFlowAdvice"/>
	<bean id="waiterComposable" class="org.springframework.aop.framework.ProxyFactoryBean"
		  p:interceptorNames="composableAdvisor"
		  p:target-ref="waiterFlowTarget"
		  p:proxyTargetClass="true"/>



</beans>